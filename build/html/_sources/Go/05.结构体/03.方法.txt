.. contents::
   :depth: 3
..

03.方法
=======

Go语言中的方法(Method)是一种作用于特定类型变量的函数。这种特定类型变量叫做接收器(Receiver)。

如果把结构体理解为类，那么接收器就是this或者self
在Go语言中，接收器的类型可以是任何类型，不仅仅是结构体，任何类型都可以拥有方法。

为结构体添加方法
----------------

1.面向过程的实现方法

::

   package main

   import "fmt"

   type Bag struct {
       // 这个结构体包含一个整型切片类型的items的成员
       items []int
   }

   // 将一个物品放入背包的过程，这个函数有2个参数，一个是背包指针（*Bag）一个是itemid
   func Insert(b *Bag, itemid int) {
       b.items = append(b.items, itemid)
   }

   func main() {
       bag := new(Bag)
       Insert(bag,1001)
       fmt.Println(bag.items)  //[1001]
   }

2.Go语言的结构体方法

::

   package main

   import "fmt"

   // 一个背包的结构体，里面有一个整数切片
   type Bag1 struct {
       items [] int
   }

   // b *Bag1表示接收器，即Insert作用的对象实例
   func (b *Bag1) Insert(itemid int) {
       b.items = append(b.items, itemid)
   }

   func main() {
       b := new(Bag1)
       b.Insert(1002)
       fmt.Println(b.items)    //[1002]
   }

每个方法只能有一个接收器。Insert转换为方法后，就能用面向对象的方法调用Insert了。
|image0|

.. |image0| image:: ../../_static/go_method_jieshouqi.png
