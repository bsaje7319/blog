.. contents::
   :depth: 3
..

Linux+Nginx+uWSGI
=================

**1.安装Nginx**

::

   yum -y install nginx

安装程序把Nginx以服务的形式安装在系统中，相关的程序及文件路径如下。

● 程序文件：放在/usr/sbin/nginx目录中。

● 全局配置文件：/etc/nginx/nginx.conf。

● 访问日志文件：/var/log/nginx/access.log。

● 错误日志文件：/var/log/nginx/error.log。

● 站点配置文件：/etc/nginx/sites-enabled/default。

::

   启动Nginx服务器
   sudo systemctl start nginx

   停止Nginx服务器：
   #sudo systemctl nginx stop

   查看Nginx服务的状态：
   #sudo systemctl nginx status

   重启Nginx服务器：
   #sudo systemctl nginx restart

**2．Nginx配置文件**

::

   user nginx;
   worker_processes auto;
   error_log /var/log/nginx/error.log;
   pid /run/nginx.pid;

   # Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
   include /usr/share/nginx/modules/*.conf;

   events {
       worker_connections 1024;
   }

   http {
       log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                         '$status $body_bytes_sent "$http_referer" '
                         '"$http_user_agent" "$http_x_forwarded_for"';

       access_log  /var/log/nginx/access.log  main;

       sendfile            on;
       tcp_nopush          on;
       tcp_nodelay         on;
       keepalive_timeout   65;
       types_hash_max_size 2048;

       include             /etc/nginx/mime.types;
       default_type        application/octet-stream;

       # Load modular configuration files from the /etc/nginx/conf.d directory.
       # See http://nginx.org/en/docs/ngx_core_module.html#include
       # for more information.
       include /etc/nginx/conf.d/*.conf;

       server {
           listen       80 default_server;
           listen       [::]:80 default_server;
           server_name  _;
           root         /usr/share/nginx/html;

           # Load configuration files for the default server block.
           include /etc/nginx/default.d/*.conf;

           location / {
           }

           location /user/ {
               proxy_pass http://127.0.0.1:8080;
           }

           error_page 404 /404.html;
               location = /40x.html {
           }

           error_page 500 502 503 504 /50x.html;
               location = /50x.html {
           }
       }

   }

**3．安装uWSGI及配置**

uWSGI是WSGI在Linux中的一种实现，这样开发者就无须自己编写WSGI Server了。

使用pip命令可以直接安装uWSGI：

.. code:: shell

   # pip3 install -U uwsgi -i "https://pypi.doubanio.com/simple/"

或者源码安装uwsgi

.. code:: shell

   # wget http://projects.unbit.it/downloads/uwsgi-2.0.4.tar.gz
   # tar -zxvf uwsgi-2.0.4.tar.gz
   # cd uwsgi-2.0.4
   # make
   # cp uwsgi /usr/bin
   # cd ..

安装完成后即可运行uwsgi命令启动WSGI服务器，uwsgi命令通过启动参数的方式配置可选的运行方式。比如，如下命令可以运行uWSGI，用于加载之前编写的服务器端程序webapp.py：

.. code:: shell

   # uwsgi --http=9090 --wsgi-file webapp.py

除了在uWSGI启动命令行中提供配置参数，uWSGI还允许通过一个配置文件设置这些配置参数，比如可以编写如下配置文件，保存在文件名uwsgi.ini中：

::

   [uwsgi]
   http = 9090
   wsgi-file = webapp.py

启动uWSGI时直接指定配置文件即可：

::

   #uwsgi uwsgi.ini

此时用浏览器访问服务器的9090端口，效果如图
